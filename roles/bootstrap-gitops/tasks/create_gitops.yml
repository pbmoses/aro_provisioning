
- name: Install GitOps Operator
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'subs.yml.j2') }}"


- pause: 
    seconds: 60

#for some reason, the IP plan is not in the first run of this, so re-run ?? sort this out later
- name: Get the install plan name and register 
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'subs.yml.j2') }}"
  register: install_gitops_output

- name: Print install plan name
  debug:
    msg: "{{ install_gitops_output.result.status.installplan.name }}"
  
- name: installplan name
  set_fact:
#   ip_name: "{{ install_gitops_output.result.status.installplan.name }}"
   ip_name: "{{ install_gitops_output | json_query('result.status.installplan.name') }}"


- name: Print install plan name 
  debug:
    msg: "{{ ip_name }}"

- name: Apply multiple patch operations to an existing Pod
  kubernetes.core.k8s_json_patch:
    api_version: operators.coreos.com/v1alpha1
    kind: InstallPlan 
    namespace: openshift-operators 
    name: "{{ ip_name }}" 
    patch:
      - op: replace 
        path: /spec/approved
        value: true 

#oc patch installplan install-dq68d \
#    --namespace openshift-logging \
#    --type merge \
#    --patch '{"spec":{"approved":true}}'

- name: Wait for GitOps CRD to exist
  kubernetes.core.k8s_info:
    api_version: "apiextensions.k8s.io/v1"
    kind: CustomResourceDefinition
    name: "{{ item }}"
  loop: "{{ gitops_expected_crds }}"
  register: crds
  until: crds.resources|length > 0
  retries: 30
  delay: 10

- pause:
    seconds: 15 

#we will fail below if updates are manual install plan is not approved. add patch to approve IP, WIP. 
- name: Create initial Application
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'templates/argo_app_demo.yml') | from_yaml_all }}"
